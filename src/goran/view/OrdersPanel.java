/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goran.view;

import goran.controller.HibernateController;
import goran.model.Order;
import goran.model.Ticket;
import goran.model.Customer;
import goran.util.PdfMaker;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author Goran
 */
public class OrdersPanel extends javax.swing.JPanel {

    private Order order;
    private Customer customer;
    private Ticket ticket;
    private Ticket ordTicket;
    private HibernateController<Customer> ctrlCustomer;
    private HibernateController<Ticket> ctrlTicket;
    private HibernateController<Order> ctrlOrder;

    public OrdersPanel() {

        initComponents();

        order = new Order();
        customer = new Customer();
        ticket = new Ticket();
        ctrlCustomer = new HibernateController<>();
        ctrlTicket = new HibernateController<>();
        ctrlOrder = new HibernateController<>();

        updateOrders();
        updateCustomers();
        updateTickets();
    }

    public void updateCustomers() {

        DefaultComboBoxModel<Customer> model = new DefaultComboBoxModel<>();
        cmbCustomer.setModel(model);
        for (Customer customer : ctrlCustomer.getOrderedList(customer, "lastName")) {
            model.addElement(customer);
        }
    }

    public void updateTickets() {

        DefaultListModel<Ticket> model = new DefaultListModel<>();
        lstTickets.setModel(model);
        for (Ticket ticket : ctrlTicket.getOrderedList(ticket, "name")) {
            model.addElement(ticket);
        }
        lstTickets.repaint();
    }

    private void updateOrderTickets() {

        DefaultListModel<Ticket> model = new DefaultListModel<>();
        lstOrderTickets.setModel(model);
        for (Ticket ticket : order.getTickets()) {
            model.addElement(ticket);
        }
    }

    private void updateOrders() {

        DefaultListModel<Order> model = new DefaultListModel<>();
        lstOrders.setModel(model);
        for (Order order : ctrlOrder.getOrderedList(order, "id")) {
            model.addElement(order);
        }
    }

    private void calcTotalPrice() {

        DefaultListModel<Ticket> model = (DefaultListModel<Ticket>) lstOrderTickets.getModel();
        Double tp = 0.0;

        for (int i = 0; i < model.getSize(); i++) {
            tp += (model.get(i).getPrice() * model.get(i).getQuantity());
        }

        if (tp == 0.0) {
            lblTotalPrice.setText("0,00kn");
        } else {
            lblTotalPrice.setText(new DecimalFormat("#.00").format(tp) + "kn");
        }
    }

    private Ticket getExistingTicket(Ticket ticket, List<Ticket> tickets) {

        Ticket exTicket = null;
        for (int i = 0; i < tickets.size(); i++) {
            if (tickets.get(i).getName().equals(ticket.getName())) {
                exTicket = tickets.get(i);
                break;
            }
        }
        return exTicket;
    }

    private void findCustomers() {

        String findBy = "";

        switch (cmbFindBy.getSelectedItem().toString()) {
            case "IME":
                findBy = "firstName";
                break;
            case "PREZIME":
                findBy = "lastName";
                break;
            case "E-MAIL":
                findBy = "email";
                break;
            case "ADRESA":
                findBy = "address";
                break;
            case "MJESTO":
                findBy = "locality";
                break;

        }

        DefaultComboBoxModel<Customer> model = new DefaultComboBoxModel<>();
        cmbCustomer.setModel(model);

        for (Customer customer : ctrlCustomer.find(customer, findBy, txtFindCustomer.getText())) {

            model.addElement(customer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle9 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblLocality = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstTickets = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOrderTickets = new javax.swing.JList<>();
        btnAdd = new javax.swing.JButton();
        lblOrder = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        btnFinishOrder = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnNewOrder = new javax.swing.JButton();
        cmbCustomer = new javax.swing.JComboBox<>();
        txtFindCustomer = new javax.swing.JTextField();
        cmbFindBy = new javax.swing.JComboBox<>();
        btnFindCustomer = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstOrders = new javax.swing.JList<>();
        txtFindOrder = new javax.swing.JTextField();
        btnFindOrder = new javax.swing.JButton();
        lblTitle10 = new javax.swing.JLabel();
        btnNewOrder2 = new javax.swing.JButton();
        lblTitle11 = new javax.swing.JLabel();
        btnPlus = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();

        setBackground(new java.awt.Color(60, 60, 70));
        setPreferredSize(new java.awt.Dimension(700, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle9.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle9.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle9.setText("KORISNIK");
        add(lblTitle9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 250, 30));

        lblEmail.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 220, 30));

        jLabel16.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("MJESTO");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 60, 30));

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("E-MAIL");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 60, 30));

        lblAddress.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 220, 30));

        lblLocality.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblLocality.setForeground(new java.awt.Color(255, 255, 255));
        add(lblLocality, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, 220, 30));

        lstTickets.setBackground(new java.awt.Color(120, 120, 120));
        lstTickets.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstTickets.setForeground(new java.awt.Color(255, 255, 255));
        lstTickets.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstTickets.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstTicketsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstTickets);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 370, 180));

        lstOrderTickets.setBackground(new java.awt.Color(120, 120, 120));
        lstOrderTickets.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstOrderTickets.setForeground(new java.awt.Color(255, 255, 255));
        lstOrderTickets.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOrderTickets.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOrderTicketsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstOrderTickets);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, 370, 160));

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_down.png"))); // NOI18N
        btnAdd.setText("DODAJ");
        btnAdd.setBorder(null);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 100, 40));

        lblOrder.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        lblOrder.setForeground(new java.awt.Color(255, 255, 255));
        lblOrder.setText("NOVA NARUDÅ½BA");
        add(lblOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 250, 30));

        btnRemove.setBackground(new java.awt.Color(0, 0, 0));
        btnRemove.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_up.png"))); // NOI18N
        btnRemove.setText("UKLONI");
        btnRemove.setBorder(null);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 100, 40));

        txtQuantity.setBackground(new java.awt.Color(120, 120, 120));
        txtQuantity.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        txtQuantity.setForeground(new java.awt.Color(255, 255, 255));
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQuantity.setText("1");
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 50, 40));

        jLabel12.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("UKUPNO:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, 40));

        lblTotalPrice.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTotalPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalPrice.setText("0.00kn");
        add(lblTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 80, 40));

        btnFinishOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnFinishOrder.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnFinishOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnFinishOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_confirm.png"))); // NOI18N
        btnFinishOrder.setText("ZAVRÅ I NARUDÅ½BU");
        btnFinishOrder.setBorder(null);
        btnFinishOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishOrderActionPerformed(evt);
            }
        });
        add(btnFinishOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 450, 210, 40));

        jLabel11.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("ADRESA");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 60, 30));

        btnNewOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnNewOrder.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnNewOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnNewOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_cancel.png"))); // NOI18N
        btnNewOrder.setText("NOVA NARUDÅ½.");
        btnNewOrder.setBorder(null);
        btnNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewOrderActionPerformed(evt);
            }
        });
        add(btnNewOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 150, 40));

        cmbCustomer.setBackground(new java.awt.Color(120, 120, 120));
        cmbCustomer.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        cmbCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerActionPerformed(evt);
            }
        });
        add(cmbCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 290, 40));

        txtFindCustomer.setBackground(new java.awt.Color(120, 120, 120));
        txtFindCustomer.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtFindCustomer.setForeground(new java.awt.Color(255, 255, 255));
        txtFindCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindCustomerbtnFindCustomerActionPerformed(evt);
            }
        });
        add(txtFindCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 140, 40));

        cmbFindBy.setBackground(new java.awt.Color(120, 120, 120));
        cmbFindBy.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        cmbFindBy.setForeground(new java.awt.Color(255, 255, 255));
        cmbFindBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PREZIME", "IME", "E-MAIL", "ADRESA", "MJESTO" }));
        cmbFindBy.setMinimumSize(new java.awt.Dimension(90, 25));
        cmbFindBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFindByActionPerformed(evt);
            }
        });
        add(cmbFindBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, 100, 40));

        btnFindCustomer.setBackground(new java.awt.Color(0, 0, 0));
        btnFindCustomer.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnFindCustomer.setForeground(new java.awt.Color(255, 255, 255));
        btnFindCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_search.png"))); // NOI18N
        btnFindCustomer.setBorder(null);
        btnFindCustomer.setFocusPainted(false);
        btnFindCustomer.setPreferredSize(new java.awt.Dimension(80, 80));
        btnFindCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindCustomerActionPerformed(evt);
            }
        });
        add(btnFindCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 450, 40, 40));

        lstOrders.setBackground(new java.awt.Color(120, 120, 120));
        lstOrders.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstOrders.setForeground(new java.awt.Color(255, 255, 255));
        lstOrders.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstOrdersMouseClicked(evt);
            }
        });
        lstOrders.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOrdersValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstOrders);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 300, 130));

        txtFindOrder.setBackground(new java.awt.Color(120, 120, 120));
        txtFindOrder.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtFindOrder.setForeground(new java.awt.Color(255, 255, 255));
        txtFindOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindOrderActionPerformed(evt);
            }
        });
        add(txtFindOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 250, 40));

        btnFindOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnFindOrder.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnFindOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnFindOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_search.png"))); // NOI18N
        btnFindOrder.setBorder(null);
        btnFindOrder.setFocusPainted(false);
        btnFindOrder.setPreferredSize(new java.awt.Dimension(80, 80));
        btnFindOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindOrderActionPerformed(evt);
            }
        });
        add(btnFindOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 40, 40));

        lblTitle10.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle10.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle10.setText("NARUDÅ½BE");
        add(lblTitle10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 250, 30));

        btnNewOrder2.setBackground(new java.awt.Color(0, 0, 0));
        btnNewOrder2.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnNewOrder2.setForeground(new java.awt.Color(255, 255, 255));
        btnNewOrder2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_remove.png"))); // NOI18N
        btnNewOrder2.setText("STORNIRAJ");
        btnNewOrder2.setBorder(null);
        btnNewOrder2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewOrder2ActionPerformed(evt);
            }
        });
        add(btnNewOrder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 140, 40));

        lblTitle11.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle11.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle11.setText("ULAZNICE");
        add(lblTitle11, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 250, 30));

        btnPlus.setBackground(new java.awt.Color(0, 0, 0));
        btnPlus.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnPlus.setForeground(new java.awt.Color(255, 255, 255));
        btnPlus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_add.png"))); // NOI18N
        btnPlus.setBorder(null);
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });
        add(btnPlus, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 40, 40));

        btnMinus.setBackground(new java.awt.Color(0, 0, 0));
        btnMinus.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnMinus.setForeground(new java.awt.Color(255, 255, 255));
        btnMinus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_remove.png"))); // NOI18N
        btnMinus.setBorder(null);
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });
        add(btnMinus, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, 40, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        if (lstOrderTickets.getSelectedIndex() != -1) {

            ordTicket = lstOrderTickets.getSelectedValue();

            DefaultListModel<Ticket> m = (DefaultListModel) lstTickets.getModel();
            Ticket t = null;
            for (int i = 0; i < m.getSize(); i++) {
                if (m.get(i).getName().equals(ordTicket.getName())) {
                    t = m.get(i);
                    break;
                }
            }
            if (t == null) {
                return;
            }

            t.setQuantity(t.getQuantity() + ordTicket.getQuantity());

            calcTotalPrice();
            lstTickets.setSelectedValue(t, true);

            ctrlTicket.save(t);
            order.getTickets().remove(ordTicket);
            ctrlTicket.delete(ordTicket);

            updateOrderTickets();
            lstOrderTickets.repaint();
            lstTickets.repaint();

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (lstTickets.getSelectedIndex() != -1 && cmbCustomer.getSelectedIndex() != -1) {

            ticket = lstTickets.getSelectedValue();
            ticket.setQuantity(ticket.getQuantity() - Integer.parseInt(txtQuantity.getText()));

            lstTickets.repaint();
            lstTickets.setSelectedValue(ticket, true);

            ordTicket = getExistingTicket(ticket, order.getTickets());

            if (ordTicket == null) {
                ordTicket = new Ticket();
                ordTicket.setName(ticket.getName());
                ordTicket.setEvent(ticket.getEvent());
                ordTicket.setPrice(ticket.getPrice());
                ordTicket.setQuantity(Integer.parseInt(txtQuantity.getText()));
                order.getTickets().add(ordTicket);
            } else {
                ordTicket.setQuantity(ordTicket.getQuantity() + Integer.parseInt(txtQuantity.getText()));
            }
            ordTicket.setDeleted(true);
            ctrlTicket.save(ordTicket);
            updateOrderTickets();

            calcTotalPrice();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFinishOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishOrderActionPerformed

        Thread t = new Thread(() -> {

            order.setCustomer(customer);
            ctrlTicket.saveList(order.getTickets());
            ctrlOrder.save(order);
            PdfMaker.createPdf(order);
            updateOrders();

            order = new Order();
            cmbCustomer.setSelectedIndex(0);
            updateOrderTickets();
            calcTotalPrice();

        });
        t.start();

    }//GEN-LAST:event_btnFinishOrderActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void lstOrderTicketsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOrderTicketsValueChanged

    }//GEN-LAST:event_lstOrderTicketsValueChanged

    private void btnFindOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindOrderActionPerformed

        if (txtFindOrder.getText().equals("")) {

            updateOrders();

        } else {

            DefaultListModel<Order> model = new DefaultListModel<>();
            lstOrders.setModel(model);
            for (Order order : ctrlOrder.find(order, "id", txtFindOrder.getText())) {
                model.addElement(order);
            }
        }
    }//GEN-LAST:event_btnFindOrderActionPerformed

    private void lstOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstOrdersMouseClicked

    }//GEN-LAST:event_lstOrdersMouseClicked

    private void lstOrdersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOrdersValueChanged

        if (lstOrders.getSelectedIndex() == -1) {
            lblOrder.setText("NOVA NARUDÅ½BA");
            cmbCustomer.setSelectedIndex(0);
            order = new Order();

        } else {
            order = lstOrders.getSelectedValue();
            lblOrder.setText("NARUDÅ½BA #" + order.getId());
            cmbCustomer.setSelectedItem(order.getCustomer());
        }

        updateOrderTickets();
        calcTotalPrice();

    }//GEN-LAST:event_lstOrdersValueChanged

    private void btnNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewOrderActionPerformed

        Thread t = new Thread(() -> {

            if (lblOrder.getText().equals("NOVA NARUDÅ½BA")) {
                DefaultListModel<Ticket> model = (DefaultListModel) lstTickets.getModel();
                for (Ticket t1 : order.getTickets()) {
                    for (int i = 0; i < model.getSize(); i++) {
                        if (t1.getName().equals(model.get(i).getName())) {
                            model.get(i).setQuantity(model.get(i).getQuantity() + t1.getQuantity());
                            ctrlTicket.save(model.get(i));
                            break;
                        }
                    }
                }
            }
            updateOrders();
            order = new Order();
            updateOrderTickets();
            lstTickets.repaint();
            calcTotalPrice();
        });
        t.start();
    }//GEN-LAST:event_btnNewOrderActionPerformed

    private void txtFindCustomerbtnFindCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindCustomerbtnFindCustomerActionPerformed

        if (txtFindCustomer.getText().equals("")) {
            updateCustomers();
        } else {
            findCustomers();
        }
    }//GEN-LAST:event_txtFindCustomerbtnFindCustomerActionPerformed

    private void cmbFindByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFindByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFindByActionPerformed

    private void btnFindCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindCustomerActionPerformed

        if (txtFindCustomer.getText().equals("")) {
            updateCustomers();
        } else {
            findCustomers();
        }
    }//GEN-LAST:event_btnFindCustomerActionPerformed

    private void btnNewOrder2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewOrder2ActionPerformed

        if (lstOrders.getSelectedIndex() != -1) {

            DefaultListModel<Ticket> model = (DefaultListModel) lstTickets.getModel();

            for (Ticket t : order.getTickets()) {
                for (int i = 0; i < model.getSize(); i++) {
                    if (t.getName().equals(model.get(i).getName())) {
                        model.get(i).setQuantity(model.get(i).getQuantity() + t.getQuantity());
                        ctrlTicket.save(model.get(i));
                        break;
                    }
                }
            }

            ctrlOrder.delete(order);
            updateOrders();
            order = new Order();
            updateOrderTickets();
            lstTickets.repaint();
            calcTotalPrice();
        }
    }//GEN-LAST:event_btnNewOrder2ActionPerformed

    private void cmbCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerActionPerformed

        if (cmbCustomer.getSelectedIndex() == -1) {
            lblAddress.setText("");
            lblLocality.setText("");
            lblEmail.setText("");

        } else {

            customer = (Customer) cmbCustomer.getSelectedItem();
            lblAddress.setText(customer.getAddress());
            lblLocality.setText(customer.getLocality());
            lblEmail.setText(customer.getEmail());
        }
    }//GEN-LAST:event_cmbCustomerActionPerformed

    private void lstTicketsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstTicketsValueChanged

    }//GEN-LAST:event_lstTicketsValueChanged

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed

        txtQuantity.setText(String.valueOf(Integer.parseInt(txtQuantity.getText()) + 1));

    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        if (Integer.parseInt(txtQuantity.getText()) > 1) {
            txtQuantity.setText(String.valueOf(Integer.parseInt(txtQuantity.getText()) - 1));
        }
    }//GEN-LAST:event_btnMinusActionPerformed

    public void applyTheme() {
        setBackground(Theme.color2);
        btnAdd.setBackground(Theme.color3);
        btnRemove.setBackground(Theme.color3);
        btnFindOrder.setBackground(Theme.color3);
        btnFinishOrder.setBackground(Theme.color3);
        cmbCustomer.setBackground(Theme.color4);
        cmbCustomer.setForeground(Theme.font1);
        lstOrders.setBackground(Theme.color4);
        lstOrders.setForeground(Theme.font1);
        lstOrderTickets.setBackground(Theme.color4);
        lstOrderTickets.setForeground(Theme.font1);
        lstTickets.setBackground(Theme.color4);
        lstTickets.setForeground(Theme.font1);
        txtFindOrder.setBackground(Theme.color4);
        txtFindOrder.setForeground(Theme.font1);
        txtQuantity.setBackground(Theme.color4);
        txtQuantity.setForeground(Theme.font1);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnFindCustomer;
    private javax.swing.JButton btnFindOrder;
    private javax.swing.JButton btnFinishOrder;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnNewOrder;
    private javax.swing.JButton btnNewOrder2;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<Customer> cmbCustomer;
    private javax.swing.JComboBox<String> cmbFindBy;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLocality;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblTitle10;
    private javax.swing.JLabel lblTitle11;
    private javax.swing.JLabel lblTitle9;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JList<Ticket> lstOrderTickets;
    private javax.swing.JList<goran.model.Order> lstOrders;
    private javax.swing.JList<Ticket> lstTickets;
    private javax.swing.JTextField txtFindCustomer;
    private javax.swing.JTextField txtFindOrder;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
