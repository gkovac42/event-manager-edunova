/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goran.view;

import goran.util.Theme;
import com.github.lgooddatepicker.components.DatePicker;
import goran.util.TxtUtil;
import goran.controller.GoogleMapsController;
import goran.controller.HibernateController;
import goran.controller.InputController;
import goran.model.Event;
import goran.model.Location;
import goran.model.Ticket;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.border.EtchedBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

/**
 *
 * @author Goran
 */
public class EventsPanel extends javax.swing.JPanel {

    private Event event;
    private Ticket ticket;
    private Location location;
    private HibernateController<Ticket> ctrlTicket;
    private HibernateController<Event> ctrlEvent;
    private HibernateController<Location> ctrlLocation;
    private GoogleMapsController ctrlMap;
    private DatePicker startDatePicker, endDatePicker;
    private SimpleDateFormat sdf;
    private String sortEvents;

    public EventsPanel() {

        initComponents();
        initDateComponents();
        drawBorders();

        event = new Event();
        location = new Location();
        ticket = new Ticket();
        ctrlEvent = new HibernateController<>();
        ctrlTicket = new HibernateController<>();
        ctrlLocation = new HibernateController<>();
        ctrlMap = new GoogleMapsController();

        lstEvents.setComponentPopupMenu(eventsMenu);
        menuButtonGroup.setSelected(mnuName.getModel(), true);

        addEventSearchListener();
        addLocationSearchListener();

        sortEvents = "name";
        updateEvents(sortEvents);
    }

    private void updateEvents(String orderBy) {

        DefaultListModel<Event> model = new DefaultListModel<>();
        lstEvents.setModel(model);
        for (Event e : ctrlEvent.getOrderedList(event, orderBy)) {
            model.addElement(e);
        }
    }

    private void updateEventTickets() {

        try {
            DefaultListModel<Ticket> model = new DefaultListModel<>();
            lstTickets.setModel(model);
            for (Ticket t : event.getTickets()) {
                if (t.isDeleted()) {
                    continue;
                }
                model.addElement(t);
            }
        } catch (Exception e) {
        }
    }

    private void updateLocations() {

        DefaultListModel<Location> model = new DefaultListModel<>();
        lstLocations.setModel(model);
        for (Location l : ctrlLocation.getOrderedList(location, "name")) {
            model.addElement(l);
        }
    }

    public void jumpToTicket(Event e, Ticket t) {

        lstEvents.setSelectedValue(e, true);
        lstTickets.setSelectedValue(t, true);
    }

    public void jumpToEvent(Event e) {

        lstEvents.setSelectedValue(e, true);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameEventsUtil = new javax.swing.JFrame();
        pnlEventsUtil = new javax.swing.JPanel();
        btnConfirmEvent = new javax.swing.JButton();
        btnCancelEvent = new javax.swing.JButton();
        txtEventName = new javax.swing.JTextField();
        lblErrorEvent = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblSearch2 = new javax.swing.JLabel();
        txtFindLocation = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstLocations = new javax.swing.JList<>();
        lblDateTimeUtil3 = new javax.swing.JLabel();
        lblDateTimeUtil4 = new javax.swing.JLabel();
        lblDateTimeUtil5 = new javax.swing.JLabel();
        pnlEventsUtilTitle = new MotionPanel(frameEventsUtil);
        lblEventsUtil = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        frameTicketsUtil = new javax.swing.JFrame();
        pnlTicketsUtilMain = new javax.swing.JPanel();
        btnConfirmTicket = new javax.swing.JButton();
        btnCancelTicket = new javax.swing.JButton();
        txtTicketName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtTicketPrice = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtTicketQuantity = new javax.swing.JTextField();
        lblErrorTicket = new javax.swing.JLabel();
        pnlTicketsUtilTitle = new MotionPanel(frameTicketsUtil);
        lblTicketsUtil = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eventsMenu = new javax.swing.JPopupMenu();
        mnuName = new javax.swing.JRadioButtonMenuItem();
        mnuDate = new javax.swing.JRadioButtonMenuItem();
        mnuLocation = new javax.swing.JRadioButtonMenuItem();
        mnuDateCreated = new javax.swing.JRadioButtonMenuItem();
        menuButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstTickets = new javax.swing.JList<>();
        btnEditEvent = new javax.swing.JButton();
        btnRemoveEvent = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstEvents = new javax.swing.JList<>();
        btnAddEvent = new javax.swing.JButton();
        btnAddTicketToEvent = new javax.swing.JButton();
        lblDateTime = new javax.swing.JLabel();
        btnRemoveTicket = new javax.swing.JButton();
        btnEditTicket = new javax.swing.JButton();
        lblEventLocation = new javax.swing.JLabel();
        lblTitle5 = new javax.swing.JLabel();
        lblTitle6 = new javax.swing.JLabel();
        lblMap = new javax.swing.JLabel();
        lblTitle7 = new javax.swing.JLabel();
        txtFindEvent = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        lblSearch1 = new javax.swing.JLabel();
        lblSearch3 = new javax.swing.JLabel();

        frameEventsUtil.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameEventsUtil.setAlwaysOnTop(true);
        frameEventsUtil.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        frameEventsUtil.setUndecorated(true);
        frameEventsUtil.setResizable(false);
        frameEventsUtil.setSize(new java.awt.Dimension(390, 430));
        frameEventsUtil.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlEventsUtil.setBackground(new java.awt.Color(60, 60, 70));
        pnlEventsUtil.setPreferredSize(new java.awt.Dimension(550, 150));
        pnlEventsUtil.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnConfirmEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnConfirmEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnConfirmEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_confirm.png"))); // NOI18N
        btnConfirmEvent.setText("POTVRDI");
        btnConfirmEvent.setBorder(null);
        btnConfirmEvent.setFocusPainted(false);
        btnConfirmEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnConfirmEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmEventActionPerformed(evt);
            }
        });
        pnlEventsUtil.add(btnConfirmEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 100, 40));

        btnCancelEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnCancelEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_cancel.png"))); // NOI18N
        btnCancelEvent.setText("NAZAD");
        btnCancelEvent.setBorder(null);
        btnCancelEvent.setFocusPainted(false);
        btnCancelEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnCancelEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelEventActionPerformed(evt);
            }
        });
        pnlEventsUtil.add(btnCancelEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 100, 40));

        txtEventName.setBackground(new java.awt.Color(120, 120, 120));
        txtEventName.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtEventName.setForeground(new java.awt.Color(255, 255, 255));
        txtEventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmEventActionPerformed(evt);
            }
        });
        pnlEventsUtil.add(txtEventName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 310, 40));

        lblErrorEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblErrorEvent.setForeground(new java.awt.Color(255, 0, 0));
        pnlEventsUtil.add(lblErrorEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 110, 40));

        jLabel14.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("NAZIV");
        pnlEventsUtil.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 40));

        lblSearch2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_search.png"))); // NOI18N
        pnlEventsUtil.add(lblSearch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 40, 40));

        txtFindLocation.setBackground(new java.awt.Color(120, 120, 120));
        txtFindLocation.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtFindLocation.setForeground(new java.awt.Color(255, 255, 255));
        pnlEventsUtil.add(txtFindLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 330, 40));

        lstLocations.setBackground(new java.awt.Color(120, 120, 120));
        lstLocations.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstLocations.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(lstLocations);

        pnlEventsUtil.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 370, 120));

        lblDateTimeUtil3.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDateTimeUtil3.setForeground(new java.awt.Color(255, 255, 255));
        lblDateTimeUtil3.setText("LOKACIJA");
        pnlEventsUtil.add(lblDateTimeUtil3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 120, 30));

        lblDateTimeUtil4.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDateTimeUtil4.setForeground(new java.awt.Color(255, 255, 255));
        lblDateTimeUtil4.setText("ZAVRŠETAK");
        pnlEventsUtil.add(lblDateTimeUtil4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 120, 30));

        lblDateTimeUtil5.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDateTimeUtil5.setForeground(new java.awt.Color(255, 255, 255));
        lblDateTimeUtil5.setText("POČETAK");
        pnlEventsUtil.add(lblDateTimeUtil5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 120, 30));

        frameEventsUtil.getContentPane().add(pnlEventsUtil, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 390, 390));

        pnlEventsUtilTitle.setBackground(new java.awt.Color(30, 30, 40));
        pnlEventsUtilTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEventsUtil.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        lblEventsUtil.setForeground(new java.awt.Color(255, 255, 255));
        lblEventsUtil.setText("DODAJ NOVI EVENT");
        pnlEventsUtilTitle.add(lblEventsUtil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 230, 40));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/title_add_event.png"))); // NOI18N
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlEventsUtilTitle.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 40));

        frameEventsUtil.getContentPane().add(pnlEventsUtilTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));

        frameTicketsUtil.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameTicketsUtil.setAlwaysOnTop(true);
        frameTicketsUtil.setUndecorated(true);
        frameTicketsUtil.setResizable(false);
        frameTicketsUtil.setSize(new java.awt.Dimension(400, 250));
        frameTicketsUtil.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTicketsUtilMain.setBackground(new java.awt.Color(60, 60, 70));
        pnlTicketsUtilMain.setPreferredSize(new java.awt.Dimension(550, 300));
        pnlTicketsUtilMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnConfirmTicket.setBackground(new java.awt.Color(0, 0, 0));
        btnConfirmTicket.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnConfirmTicket.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_confirm.png"))); // NOI18N
        btnConfirmTicket.setText("POTVRDI");
        btnConfirmTicket.setBorder(null);
        btnConfirmTicket.setFocusPainted(false);
        btnConfirmTicket.setPreferredSize(new java.awt.Dimension(80, 80));
        btnConfirmTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmTicketActionPerformed(evt);
            }
        });
        pnlTicketsUtilMain.add(btnConfirmTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 100, 40));

        btnCancelTicket.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelTicket.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnCancelTicket.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_cancel.png"))); // NOI18N
        btnCancelTicket.setText("NAZAD");
        btnCancelTicket.setBorder(null);
        btnCancelTicket.setFocusPainted(false);
        btnCancelTicket.setPreferredSize(new java.awt.Dimension(80, 80));
        btnCancelTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTicketActionPerformed(evt);
            }
        });
        pnlTicketsUtilMain.add(btnCancelTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 100, 40));

        txtTicketName.setBackground(new java.awt.Color(120, 120, 120));
        txtTicketName.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtTicketName.setForeground(new java.awt.Color(255, 255, 255));
        txtTicketName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmTicketActionPerformed(evt);
            }
        });
        pnlTicketsUtilMain.add(txtTicketName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 290, 40));

        jLabel15.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("NAZIV");
        pnlTicketsUtilMain.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 40));

        txtTicketPrice.setBackground(new java.awt.Color(120, 120, 120));
        txtTicketPrice.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtTicketPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtTicketPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmTicketActionPerformed(evt);
            }
        });
        pnlTicketsUtilMain.add(txtTicketPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 290, 40));

        jLabel16.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("CIJENA");
        pnlTicketsUtilMain.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 40));

        jLabel17.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("KOLIČINA");
        pnlTicketsUtilMain.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 40));

        txtTicketQuantity.setBackground(new java.awt.Color(120, 120, 120));
        txtTicketQuantity.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtTicketQuantity.setForeground(new java.awt.Color(255, 255, 255));
        txtTicketQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmTicketActionPerformed(evt);
            }
        });
        pnlTicketsUtilMain.add(txtTicketQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 290, 40));

        lblErrorTicket.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblErrorTicket.setForeground(new java.awt.Color(255, 0, 0));
        pnlTicketsUtilMain.add(lblErrorTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 170, 40));

        frameTicketsUtil.getContentPane().add(pnlTicketsUtilMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 400, 210));

        pnlTicketsUtilTitle.setBackground(new java.awt.Color(30, 30, 40));
        pnlTicketsUtilTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTicketsUtil.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        lblTicketsUtil.setForeground(new java.awt.Color(255, 255, 255));
        lblTicketsUtil.setText("DODAJ NOVU ULAZNICU");
        pnlTicketsUtilTitle.add(lblTicketsUtil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 230, 40));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/title_add_ticket.png"))); // NOI18N
        pnlTicketsUtilTitle.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 40));

        frameTicketsUtil.getContentPane().add(pnlTicketsUtilTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));

        eventsMenu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        eventsMenu.setToolTipText("");

        menuButtonGroup.add(mnuName);
        mnuName.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        mnuName.setText("Po nazivu");
        mnuName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuNameActionPerformed(evt);
            }
        });
        eventsMenu.add(mnuName);

        menuButtonGroup.add(mnuDate);
        mnuDate.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        mnuDate.setSelected(true);
        mnuDate.setText("Po datumu");
        mnuDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDateActionPerformed(evt);
            }
        });
        eventsMenu.add(mnuDate);

        menuButtonGroup.add(mnuLocation);
        mnuLocation.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        mnuLocation.setText("Po lokaciji");
        mnuLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLocationActionPerformed(evt);
            }
        });
        eventsMenu.add(mnuLocation);

        menuButtonGroup.add(mnuDateCreated);
        mnuDateCreated.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        mnuDateCreated.setText("Po unosu");
        mnuDateCreated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDateCreatedActionPerformed(evt);
            }
        });
        eventsMenu.add(mnuDateCreated);

        setBackground(new java.awt.Color(60, 60, 70));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstTickets.setBackground(new java.awt.Color(120, 120, 120));
        lstTickets.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstTickets.setForeground(new java.awt.Color(255, 255, 255));
        lstTickets.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstTickets);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 320, 100));

        btnEditEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnEditEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnEditEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnEditEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_edit.png"))); // NOI18N
        btnEditEvent.setText("UREDI");
        btnEditEvent.setBorder(null);
        btnEditEvent.setFocusPainted(false);
        btnEditEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnEditEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEventActionPerformed(evt);
            }
        });
        add(btnEditEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 100, 40));

        btnRemoveEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnRemoveEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnRemoveEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_remove.png"))); // NOI18N
        btnRemoveEvent.setText("UKLONI");
        btnRemoveEvent.setBorder(null);
        btnRemoveEvent.setFocusPainted(false);
        btnRemoveEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnRemoveEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEventActionPerformed(evt);
            }
        });
        add(btnRemoveEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 100, 40));

        lstEvents.setBackground(new java.awt.Color(120, 120, 120));
        lstEvents.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lstEvents.setForeground(new java.awt.Color(255, 255, 255));
        lstEvents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEvents.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEventsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstEvents);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 320, 180));

        btnAddEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnAddEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnAddEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_add.png"))); // NOI18N
        btnAddEvent.setText("DODAJ");
        btnAddEvent.setBorder(null);
        btnAddEvent.setFocusPainted(false);
        btnAddEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnAddEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEventActionPerformed(evt);
            }
        });
        add(btnAddEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 100, 40));

        btnAddTicketToEvent.setBackground(new java.awt.Color(0, 0, 0));
        btnAddTicketToEvent.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnAddTicketToEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnAddTicketToEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_add.png"))); // NOI18N
        btnAddTicketToEvent.setText("DODAJ");
        btnAddTicketToEvent.setBorder(null);
        btnAddTicketToEvent.setFocusPainted(false);
        btnAddTicketToEvent.setPreferredSize(new java.awt.Dimension(80, 80));
        btnAddTicketToEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTicketToEventActionPerformed(evt);
            }
        });
        add(btnAddTicketToEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 100, 40));

        lblDateTime.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDateTime.setForeground(new java.awt.Color(255, 255, 255));
        lblDateTime.setText("DATUM ODRŽAVANJA EVENTA");
        add(lblDateTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 290, 40));

        btnRemoveTicket.setBackground(new java.awt.Color(0, 0, 0));
        btnRemoveTicket.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnRemoveTicket.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_remove.png"))); // NOI18N
        btnRemoveTicket.setText("UKLONI");
        btnRemoveTicket.setBorder(null);
        btnRemoveTicket.setFocusPainted(false);
        btnRemoveTicket.setPreferredSize(new java.awt.Dimension(80, 80));
        btnRemoveTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTicketActionPerformed(evt);
            }
        });
        add(btnRemoveTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 100, 40));

        btnEditTicket.setBackground(new java.awt.Color(0, 0, 0));
        btnEditTicket.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnEditTicket.setForeground(new java.awt.Color(255, 255, 255));
        btnEditTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_edit.png"))); // NOI18N
        btnEditTicket.setText("UREDI");
        btnEditTicket.setBorder(null);
        btnEditTicket.setFocusPainted(false);
        btnEditTicket.setPreferredSize(new java.awt.Dimension(80, 80));
        btnEditTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditTicketActionPerformed(evt);
            }
        });
        add(btnEditTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 100, 40));

        lblEventLocation.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblEventLocation.setForeground(new java.awt.Color(255, 255, 255));
        lblEventLocation.setText("LOKACIJA EVENTA");
        add(lblEventLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 290, 40));

        lblTitle5.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle5.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle5.setText("ULAZNICE");
        add(lblTitle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 250, 30));

        lblTitle6.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle6.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle6.setText("DETALJI");
        add(lblTitle6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 220, 30));

        lblMap.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, java.awt.Color.darkGray));
        add(lblMap, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 350, 360));

        lblTitle7.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblTitle7.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle7.setText("EVENTI");
        add(lblTitle7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 220, 30));

        txtFindEvent.setBackground(new java.awt.Color(120, 120, 120));
        txtFindEvent.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        txtFindEvent.setForeground(new java.awt.Color(255, 255, 255));
        add(txtFindEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 40));

        lblSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_location.png"))); // NOI18N
        add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 40, 40));

        lblSearch1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_search.png"))); // NOI18N
        add(lblSearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 40, 40));

        lblSearch3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearch3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_calendar.png"))); // NOI18N
        add(lblSearch3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 40, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEventActionPerformed

        if (lstEvents.getSelectedIndex() == -1) {

        } else {

            lblEventsUtil.setText(TxtUtil.EDIT_EVENT);
            txtEventName.setText(event.getName());
            startDatePicker.setDate(event.getStartDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            endDatePicker.setDate(event.getEndDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            lstLocations.setSelectedValue(event.getLocation(), true);
            updateLocations();
            
            frameEventsUtil.setVisible(true);
            frameEventsUtil.setLocationRelativeTo(this);
        }
    }//GEN-LAST:event_btnEditEventActionPerformed

    private void btnRemoveEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEventActionPerformed

        if (lstEvents.getSelectedIndex() == -1) {

        } else {

            for (Ticket t : event.getTickets()) {
                ctrlTicket.delete(t);
            }

            ctrlEvent.delete(event);
            updateEvents(sortEvents);

        }
    }//GEN-LAST:event_btnRemoveEventActionPerformed

    private void btnConfirmEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmEventActionPerformed

        event.setName(txtEventName.getText());

        if (InputController.eventInputError(event)) {

            lblErrorEvent.setText(TxtUtil.INPUT_ERROR);

        } else {

            event.setName(txtEventName.getText());

            String date;
            if (startDatePicker.getDate() != null) {
                event.setStartDate(Date.from(startDatePicker.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                date = sdf.format(event.getStartDate());

                if (endDatePicker.getDate() != null) {
                    event.setEndDate(Date.from(endDatePicker.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                    date += " - " + sdf.format(event.getEndDate());
                }
                lblDateTime.setText(date);
            }

            if (lstLocations.getSelectedIndex() != -1) {
                location = lstLocations.getSelectedValue();
                event.setLocation(location);
                ctrlEvent.save(event);
                ctrlMap.openOrDownloadMap(location, 14, lblMap, "S");
                lblEventLocation.setText(location.toString());
            }
            
            ctrlEvent.save(event);
            updateEvents(sortEvents);
            lblErrorEvent.setText("");
            frameEventsUtil.dispose();
            lstEvents.setSelectedValue(event, true);
        }
    }//GEN-LAST:event_btnConfirmEventActionPerformed

    private void btnCancelEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelEventActionPerformed

        frameEventsUtil.dispose();
        lblErrorEvent.setText("");
    }//GEN-LAST:event_btnCancelEventActionPerformed

    private void lstEventsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEventsValueChanged

        if (lstEvents.getSelectedIndex() == -1) {

            DefaultListModel<Ticket> model = (DefaultListModel<Ticket>) lstTickets.getModel();
            model.removeAllElements();
            lblMap.setIcon(null);
            lblEventLocation.setText(TxtUtil.ADD_EVENT_LOCATION);
            lblDateTime.setText(TxtUtil.ADD_EVENT_DATE);

        } else {

            event = lstEvents.getSelectedValue();
            updateEventTickets();

            if (event.getLocation() == null) {

                lblMap.setIcon(null);
                lblEventLocation.setText(TxtUtil.ADD_EVENT_LOCATION);

            } else {

                lblEventLocation.setText(event.getLocation().toString());
                ctrlMap.openOrDownloadMap(event.getLocation(), 14, lblMap, "S");
            }

            if (event.getStartDate() == null) {
                lblDateTime.setText(TxtUtil.ADD_EVENT_DATE);
                startDatePicker.setDate(null);
                endDatePicker.setDate(null);

            } else {

                String date = sdf.format(event.getStartDate());
                startDatePicker.setDate(event.getStartDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());

                if (event.getEndDate() != null) {
                    endDatePicker.setDate(event.getEndDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
                    date += " - " + sdf.format(event.getEndDate());
                }

                lblDateTime.setText(date);
            }
        }
    }//GEN-LAST:event_lstEventsValueChanged

    private void btnConfirmTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmTicketActionPerformed

        try {
            ticket.setName(txtTicketName.getText());
            ticket.setPrice(Double.parseDouble(txtTicketPrice.getText()));
            ticket.setQuantity(Integer.parseInt(txtTicketQuantity.getText()));
            ticket.setEvent(lstEvents.getSelectedValue());

            if (InputController.ticketInputError(ticket, txtTicketPrice.getText(), txtTicketQuantity.getText())) {

                lblErrorTicket.setText(TxtUtil.INPUT_ERROR);

            } else {

                if (lblTicketsUtil.getText().equals(TxtUtil.ADD_TICKET)) {
                    event.getTickets().add(ticket);
                }

                ctrlTicket.save(ticket);
                ctrlEvent.save(event);
                updateEventTickets();
                frameTicketsUtil.dispose();

            }
        } catch (NumberFormatException numberFormatException) {
            lblErrorTicket.setText(TxtUtil.NUMBER_ERROR);
        }
    }//GEN-LAST:event_btnConfirmTicketActionPerformed

    private void btnCancelTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTicketActionPerformed

        frameTicketsUtil.dispose();
    }//GEN-LAST:event_btnCancelTicketActionPerformed

    private void btnAddTicketToEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTicketToEventActionPerformed

        if (lstEvents.getSelectedIndex() == -1) {

        } else {

            ticket = new Ticket();

            lblTicketsUtil.setText(TxtUtil.ADD_TICKET);
            lblErrorTicket.setText("");
            txtTicketName.setText(event.getName());
            txtTicketPrice.setText("");
            txtTicketQuantity.setText((""));

            frameTicketsUtil.setVisible(true);
            frameTicketsUtil.setLocationRelativeTo(this);
        }
    }//GEN-LAST:event_btnAddTicketToEventActionPerformed

    private void btnAddEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEventActionPerformed

        event = new Event();

        lblEventsUtil.setText(TxtUtil.ADD_EVENT);
        lblErrorEvent.setText("");
        txtEventName.setText("");
        startDatePicker.setDate(null);
        endDatePicker.setDate(null);
        lstLocations.setSelectedValue(null, true);
        updateLocations();

        frameEventsUtil.setVisible(true);
        frameEventsUtil.setLocationRelativeTo(this);
    }//GEN-LAST:event_btnAddEventActionPerformed

    private void btnRemoveTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTicketActionPerformed

        if (lstTickets.getSelectedIndex() == -1) {

        } else {

            ticket = lstTickets.getSelectedValue();
            event.getTickets().remove(ticket);
            ctrlTicket.delete(ticket);
            ctrlEvent.save(event);
            updateEventTickets();

        }
    }//GEN-LAST:event_btnRemoveTicketActionPerformed

    private void btnEditTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditTicketActionPerformed

        if (lstTickets.getSelectedIndex() == -1) {

        } else {

            ticket = lstTickets.getSelectedValue();
            lblTicketsUtil.setText(TxtUtil.EDIT_TICKET);
            txtTicketName.setText(ticket.getName());
            txtTicketPrice.setText(String.valueOf(ticket.getPrice()));
            txtTicketQuantity.setText(String.valueOf(ticket.getQuantity()));

            frameTicketsUtil.setVisible(true);
            frameTicketsUtil.setLocationRelativeTo(this);

        }
    }//GEN-LAST:event_btnEditTicketActionPerformed

    private void mnuNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuNameActionPerformed
        sortEvents = "name";
        updateEvents(sortEvents);
    }//GEN-LAST:event_mnuNameActionPerformed

    private void mnuDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDateActionPerformed
        sortEvents = "startDate";
        updateEvents(sortEvents);
     }//GEN-LAST:event_mnuDateActionPerformed

    private void mnuLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLocationActionPerformed
        sortEvents = "location";
        updateEvents(sortEvents);
    }//GEN-LAST:event_mnuLocationActionPerformed

    private void mnuDateCreatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDateCreatedActionPerformed
        sortEvents = "dateCreated";
        updateEvents(sortEvents);
    }//GEN-LAST:event_mnuDateCreatedActionPerformed

    public void applyTheme() {

        //Events Panel
        setBackground(Theme.color2);
        btnAddEvent.setBackground(Theme.color3);
        btnRemoveEvent.setBackground(Theme.color3);
        btnEditEvent.setBackground(Theme.color3);
        btnAddTicketToEvent.setBackground(Theme.color3);
        btnRemoveTicket.setBackground(Theme.color3);
        btnEditTicket.setBackground(Theme.color3);
        lstEvents.setBackground(Theme.color4);
        lstEvents.setForeground(Theme.font1);
        lstTickets.setBackground(Theme.color4);
        lstTickets.setForeground(Theme.font1);
        txtFindEvent.setBackground(Theme.color4);
        txtFindEvent.setForeground(Theme.font1);

        //Events Util
        pnlEventsUtilTitle.setBackground(Theme.color1);
        pnlEventsUtil.setBackground(Theme.color2);
        btnConfirmEvent.setBackground(Theme.color3);
        btnCancelEvent.setBackground(Theme.color3);
        txtEventName.setBackground(Theme.color4);
        txtEventName.setForeground(Theme.font1);
        lstLocations.setBackground(Theme.color4);
        lstLocations.setForeground(Theme.font1);
        txtFindLocation.setBackground(Theme.color4);
        txtFindLocation.setForeground(Theme.font1);

        //Tickets Util
        pnlTicketsUtilTitle.setBackground(Theme.color1);
        pnlTicketsUtilMain.setBackground(Theme.color2);
        btnConfirmTicket.setBackground(Theme.color3);
        btnCancelTicket.setBackground(Theme.color3);
        txtTicketName.setBackground(Theme.color4);
        txtTicketPrice.setBackground(Theme.color4);
        txtTicketQuantity.setBackground(Theme.color4);
        txtTicketName.setForeground(Theme.font1);
        txtTicketPrice.setForeground(Theme.font1);
        txtTicketQuantity.setForeground(Theme.font1);

        lblMap.setBorder(new EtchedBorder(Theme.color1, Theme.color2));
        drawBorders();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEvent;
    private javax.swing.JButton btnAddTicketToEvent;
    private javax.swing.JButton btnCancelEvent;
    private javax.swing.JButton btnCancelTicket;
    private javax.swing.JButton btnConfirmEvent;
    private javax.swing.JButton btnConfirmTicket;
    private javax.swing.JButton btnEditEvent;
    private javax.swing.JButton btnEditTicket;
    private javax.swing.JButton btnRemoveEvent;
    private javax.swing.JButton btnRemoveTicket;
    private javax.swing.JPopupMenu eventsMenu;
    private javax.swing.JFrame frameEventsUtil;
    private javax.swing.JFrame frameTicketsUtil;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDateTime;
    private javax.swing.JLabel lblDateTimeUtil3;
    private javax.swing.JLabel lblDateTimeUtil4;
    private javax.swing.JLabel lblDateTimeUtil5;
    private javax.swing.JLabel lblErrorEvent;
    private javax.swing.JLabel lblErrorTicket;
    private javax.swing.JLabel lblEventLocation;
    private javax.swing.JLabel lblEventsUtil;
    private javax.swing.JLabel lblMap;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSearch1;
    private javax.swing.JLabel lblSearch2;
    private javax.swing.JLabel lblSearch3;
    private javax.swing.JLabel lblTicketsUtil;
    private javax.swing.JLabel lblTitle5;
    private javax.swing.JLabel lblTitle6;
    private javax.swing.JLabel lblTitle7;
    private javax.swing.JList<Event> lstEvents;
    private javax.swing.JList<Location> lstLocations;
    private javax.swing.JList<Ticket> lstTickets;
    private javax.swing.ButtonGroup menuButtonGroup;
    private javax.swing.JRadioButtonMenuItem mnuDate;
    private javax.swing.JRadioButtonMenuItem mnuDateCreated;
    private javax.swing.JRadioButtonMenuItem mnuLocation;
    private javax.swing.JRadioButtonMenuItem mnuName;
    private javax.swing.JPanel pnlEventsUtil;
    private javax.swing.JPanel pnlEventsUtilTitle;
    private javax.swing.JPanel pnlTicketsUtilMain;
    private javax.swing.JPanel pnlTicketsUtilTitle;
    private javax.swing.JTextField txtEventName;
    private javax.swing.JTextField txtFindEvent;
    private javax.swing.JTextField txtFindLocation;
    private javax.swing.JTextField txtTicketName;
    private javax.swing.JTextField txtTicketPrice;
    private javax.swing.JTextField txtTicketQuantity;
    // End of variables declaration//GEN-END:variables

    private void initDateComponents() {

        startDatePicker = new DatePicker();
        startDatePicker.setLocale(new Locale("hr"));
        startDatePicker.setDateToToday();
        startDatePicker.setBackground(Theme.color2);
        startDatePicker.getComponentDateTextField().setBackground(Theme.color2);
        startDatePicker.getComponentDateTextField().setForeground(Theme.font1);
        startDatePicker.getComponentToggleCalendarButton().setText("");
        startDatePicker.getComponentToggleCalendarButton()
                .setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_calendar.png")));
        startDatePicker.getComponentToggleCalendarButton().setBackground(Theme.color3);
        startDatePicker.getSettings().setDateRangeLimits(LocalDate.now(), LocalDate.MAX);
        endDatePicker = new DatePicker();
        endDatePicker.setLocale(new Locale("hr"));
        endDatePicker.setBackground(Theme.color2);
        endDatePicker.getComponentToggleCalendarButton().setText("");
        endDatePicker.getComponentToggleCalendarButton()
                .setIcon(new javax.swing.ImageIcon(getClass().getResource("/goran/resources/icons/btn_calendar.png")));
        endDatePicker.getComponentDateTextField().setBackground(Theme.color2);
        endDatePicker.getComponentDateTextField().setForeground(Theme.font1);
        endDatePicker.getComponentToggleCalendarButton().setBackground(Theme.color3);
        endDatePicker.getSettings().setDateRangeLimits(LocalDate.now(), LocalDate.MAX);
        pnlEventsUtil.add(startDatePicker, new AbsoluteConstraints(10, 90));
        pnlEventsUtil.add(endDatePicker, new AbsoluteConstraints(200, 90));
        sdf = new SimpleDateFormat("dd.MM.yyyy");
    }

    private void addEventSearchListener() {

        txtFindEvent.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                DefaultListModel<Event> model = new DefaultListModel<>();
                lstEvents.setModel(model);
                for (Event event : ctrlEvent.find(event, sortEvents, txtFindEvent.getText())) {
                    model.addElement(event);

                }

            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                DefaultListModel<Event> model = new DefaultListModel<>();
                lstEvents.setModel(model);
                for (Event event : ctrlEvent.find(event, sortEvents, txtFindEvent.getText())) {
                    model.addElement(event);

                }

            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    private void addLocationSearchListener() {

        txtFindLocation.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                DefaultListModel<Location> model = new DefaultListModel<>();
                lstLocations.setModel(model);
                for (Location location : ctrlLocation.find(location, "name", txtFindLocation.getText())) {
                    model.addElement(location);
                }

            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                DefaultListModel<Location> model = new DefaultListModel<>();
                lstLocations.setModel(model);
                for (Location location : ctrlLocation.find(location, "name", txtFindLocation.getText())) {
                    model.addElement(location);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    private void drawBorders() {
        frameEventsUtil.getRootPane().setBorder(BorderFactory.createEtchedBorder(Theme.color2, Theme.color1));
        frameTicketsUtil.getRootPane().setBorder(BorderFactory.createEtchedBorder(Theme.color2, Theme.color1));
    }
}
